@using CinemaTic.Core.Utilities
@model CinemaTic.ViewModels.Movies.SetMovieScheduleViewModel

<h5 class="text-center mb-5 crud-header">Set/edit schedule</h5>
<form asp-area="Owner" asp-controller="Movies" asp-action="SetMovieSchedule" method="post" class="set-movies">
    <input type="hidden" asp-for="CinemaId" />
    <input type="hidden" asp-for="MovieId" />
    <div role="list" asp-validation-summary="None" class="text-danger"></div>
    <div class="d-flex flex-wrap tableView row-gap-3">
        @for(int i = 0; i < Model.Dates.Count; i++)
        {
            <input type="hidden" asp-for="Dates[i].Date" />
            var currentDate = Model.Dates[i];
            <div class="d-flex flex-column date-container">
                <div class="top-date-container products-header w-100">
                    <span>@currentDate.Date.ToString(Constants.DateTimeFormat)</span>
                    <button type="button" class="add" id="@i" title="Add a time">+</button>
                </div>
                <div class="times mt-2 d-flex flex-column align-items-start">
                    @for (int j = 0; j < currentDate.Times.Count; j++)
                    {
                        <div class="active-form w-100">
                            <input asp-for="Dates[i].Times[j]" type="time" />
                            <button type="button" class="remove" title="Remove">-</button>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
    <button class="app-content-headerButton mt-5" asp-area="Owner" asp-controller="Movies" asp-action="SetMovieSchedule" type="submit">Set/edit schedule</button>
</form>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<script>
    document.querySelectorAll(".add").forEach(i => i.addEventListener("click", function () {
        var timesContainer = i.parentElement.nextElementSibling;

        let timeIndex = timesContainer.children.length;
        const inputContent = ` <input id="Dates[${i.id}].Times_${timeIndex}" name="Dates[${i.id}].Times[${timeIndex}]" type="time" value=""> <button type="button" class="remove" title="Remove">-</button>`;
       
        var node = document.createElement("div");
        node.classList.add("active-form")
        node.classList.add("w-100")
        node.innerHTML = inputContent;
        timesContainer.appendChild(node);

        attachRemoveEvent();
    }));
    attachRemoveEvent();
    function attachRemoveEvent() {
        document.querySelectorAll(".remove").forEach(i => i.addEventListener("click", function () {
            var timesContainer = i.parentElement.parentElement;

            timesContainer.removeChild(i.parentElement);
            resetFields();
        }));
    }
    function resetFields() {
        var fields = document.querySelectorAll(".times .active-form input");
        for(let i = 0; i < fields.length; i++) {
            var splitId = fields[i].id.split('__');
            fields[i].id = splitId[0] + `__Times_${i}_`;
            fields[i].setAttribute('name', `Dates[${splitId[0].split('_')[1]}]` + `.Times[${i}]`);
        }
    }
</script>