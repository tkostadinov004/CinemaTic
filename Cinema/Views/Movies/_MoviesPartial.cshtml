@model IEnumerable<Cinema.ViewModels.Movies.MovieInfoCardViewModel>

@foreach (var movie in Model)
{
    <div class="cinema-row">
        <button class="cell-more-button">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-more-vertical"><circle cx="12" cy="12" r="1" /><circle cx="12" cy="5" r="1" /><circle cx="12" cy="19" r="1" /></svg>
        </button>
        <div class="cinema-cell image">
            <a class="d-flex align-items-center cinema-link" asp-controller="Movies" asp-action="Details" asp-route-id="@movie.Id">
                <img src="~/client-images/Movies/@movie.ImageUrl" alt="cinema-logo">
                <span>@movie.Name</span>
            </a>
        </div>
        <div class="cinema-cell sales"><span class="cell-label">Genre:</span>@movie.Genre</div>
        <div class="cinema-cell sales"><span class="cell-label">Average rating:</span>@movie.AverageRating / 10.0</div>
        <div class="cinema-cell stock"><span class="cell-label">Rating count:</span>@movie.RatingCount</div>
        <div class="cinema-cell stock"><span class="cell-label">Added by:</span>@movie.AddedBy</div>
    </div>
    <div class="movie-grid" hidden>
        <div class="card-wrapper">
            <div class="card">
                <img src="~/client-images/Movies/@movie.ImageUrl" alt="cinema-logo">
                <div class="descriptions">
                    <div class="description-buttons">
                        <a class="desc-button" asp-controller="Movies" asp-action="Details" asp-route-id="@movie.Id">
                            <i class="fa-solid fa-circle-info f-size-b"></i>
                            Details
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
    var search = document.getElementById("search-bar");
    var filterOptions = document.getElementById('filter-options');
    var activeSort = document.querySelector('.sort-button.selected');
    if (search) {
        let timeout = null;
        search.addEventListener("keyup", function () {
            clearTimeout(timeout);
            timeout = setTimeout(function () {
                getItems('Movies', 'SearchAndFilterMovies', search.value, '', (filterOptions ? filterOptions.value : null), (activeSort ? activeSort.id : null));
            }, 300);
        });
    }

    filterOptions.addEventListener("change", function () {
        getItems('Movies', "SearchAndFilterMovies", (search ? search.value : null), '', filterOptions.value, (activeSort ? activeSort.id : null));
    });
    document.querySelectorAll(".sort-button").forEach(i => i.addEventListener('click', function () {
        var alreadyActive = document.querySelector('.sort-button.selected');
        if (alreadyActive) {
            alreadyActive.classList.remove("selected");
        }
        activeSort = i;
        i.classList.add("selected");
        getItems('Movies', 'SearchAndFilterMovies', (search ? search.value : null), '', (filterOptions ? filterOptions.value : null), i.id);
    }));
</script>